#include <bits/stdc++.h>
using namespace std;

 // } Driver Code Ends
class Solution{

	public:
int helper(int arr[],int n,vector<int>&v,int sum,unordered_set<int>&us,int dp[][10002])
{
        if(n==0)
        {
            if(us.count(sum)==0)
            {
                us.emplace(sum);
                v.push_back(sum);
            }
            return 0;
        }
        if(dp[n][sum]!=-1)
        return dp[n][sum];
        else{
        return dp[n][sum]=helper(arr,n-1,v,sum+arr[n-1],us,dp)+helper(arr,n-1,v,sum,us,dp);
        }
        return 0;
}
	int minDiffernce(int arr[], int n) 
	{ 
	    unordered_set<int>us;
	    int totalSum=accumulate(arr,arr+n,0);
	    int sum=0;
	    vector<int>v;
	    int dp[102][10002];
	    memset(dp,-1,sizeof(dp));
	    helper(arr,n,v,sum,us,dp);
	    sort(v.begin(),v.end());
	    for(int i=v.size()-1;i>=0;i--)
	    {
	        if(2*v[i]<=totalSum)
	        {
	            return totalSum-2*v[i];
	            break;
	        }
	    }
	} 
};


// { Driver Code Starts.
int main() 
{
   
   
   	int t;
    cin >> t;
    while (t--)
    {
        int n;
        cin >> n;

        int a[n];
        for(int i = 0; i < n; i++)
        	cin >> a[i];

       

	    Solution ob;
	    cout << ob.minDiffernce(a, n) << "\n";
	     
    }
    return 0;
}  // } Drive code ends
